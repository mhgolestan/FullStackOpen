[{"/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/App.js":"1","/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/components/Person.js":"2","/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/components/Persons.js":"3","/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/components/PersonForm.js":"4","/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/components/Filter.js":"5","/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/services/persons.js":"6","/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/index.js":"7","/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/components/AddNotification.js":"8","/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/components/ErrorNotification.js":"9","/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/components/Notification.js":"10"},{"size":3778,"mtime":1613749461946,"results":"11","hashOfConfig":"12"},{"size":214,"mtime":1613746506267,"results":"13","hashOfConfig":"12"},{"size":356,"mtime":1613510208498,"results":"14","hashOfConfig":"12"},{"size":538,"mtime":1612792934335,"results":"15","hashOfConfig":"12"},{"size":238,"mtime":1612792758939,"results":"16","hashOfConfig":"12"},{"size":556,"mtime":1613746316469,"results":"17","hashOfConfig":"12"},{"size":168,"mtime":1613734946815,"results":"18","hashOfConfig":"12"},{"size":226,"mtime":1613748147950,"results":"19","hashOfConfig":"12"},{"size":232,"mtime":1613748181443,"results":"20","hashOfConfig":"12"},{"size":225,"mtime":1613748612466,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"fmx79l",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/App.js",["44"],"import React, { useEffect, useState } from \"react\";\nimport personService from \"./services/persons\";\n\nimport Person from \"./components/Person\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\n// import AddNotification from \"./components/AddNotification\";\n// import ErrorNotification from \"./components/ErrorNotification\";\n\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"New name ...\");\n  const [newNumber, setNewNumber] = useState(\"New number ...\");\n  const [filterNames, setFilterNames] = useState(\"\");\n  const [message, setMessage] = useState([{ text: \"\", type: \"\" }]);\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const addName = (event) => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n    const checkName = (person) => person.name === personObject.name;\n    if (!persons.some(checkName)) {\n      personService.create(personObject).then((personObject) => {\n        setPersons(persons.concat(personObject));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setMessage({\n          text: `Added ${personObject.name}`,\n          type: \"add\",\n        });\n        setTimeout(() => {\n          setMessage({ text: \"\", type: \"\" });\n        }, 3000);\n      });\n    } else {\n      const oldPerson = persons.find(checkName);\n      if (window.confirm(`${oldPerson.name} exists`)) {\n        personService\n          .edit(oldPerson.id, personObject)\n          .then((editedPersonData) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== oldPerson.id ? person : editedPersonData\n              )\n            );\n          });\n      }\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleDelete = (id, name) => {\n    if (window.confirm(\"Delete for real?\")) {\n      personService\n        .remove(id)\n        .then((response) => {\n          const remainedPersons = persons.filter((person) => person.id !== id);\n          setPersons(remainedPersons);\n        })\n        .catch((error) => {\n          setPersons(persons.filter((person) => person.id !== id));\n          setMessage({\n            text: `Information of '${name}' was already deleted from server`,\n            type: \"error\",\n          });\n          setTimeout(() => {\n            setMessage({ text: \"\", type: \"\" });\n          }, 3000);\n        });\n    }\n  };\n\n  const personToShow =\n    filterNames === \"\"\n      ? persons\n      : persons.filter((person) => person.name.includes(filterNames));\n\n  const handleFilterNames = (event) => {\n    setFilterNames(event.target.value);\n  };\n\n  console.log(message.text);\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      {/*<Notification\n        message={message}\n        className={\n          message.type === \"add\" ? \"add-notif-class\" : \"error-notif-class\"\n        }\n      />*/}\n\n      <Filter filterNames={filterNames} handleFilterNames={handleFilterNames} />\n\n      <h2>Add new contact</h2>\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      {personToShow.map((person) => (\n        <Person\n          id={person.id}\n          name={person.name}\n          number={person.number}\n          handleDelete={() => handleDelete(person.id, person.name)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/components/Person.js",[],"/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/components/Persons.js",[],"/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/components/PersonForm.js",["45"],"import Reeact from \"react\";\n\nconst PersonForm = ({\n  addName,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange,\n}) => {\n  return (\n    <div>\n      <form onSubmit={addName}>\n        <div>\n          name:\n          <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonForm;\n","/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/components/Filter.js",[],"/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/services/persons.js",["46"],"/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/index.js",[],"/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/components/AddNotification.js",[],"/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/components/ErrorNotification.js",[],"/Users/mhg/Documents/GitHub/Courses/FullStackOpen/phonebook/src/components/Notification.js",[],{"ruleId":"47","severity":1,"message":"48","line":10,"column":8,"nodeType":"49","messageId":"50","endLine":10,"endColumn":20},{"ruleId":"47","severity":1,"message":"51","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":14},{"ruleId":"52","severity":1,"message":"53","line":22,"column":1,"nodeType":"54","endLine":22,"endColumn":49},"no-unused-vars","'Notification' is defined but never used.","Identifier","unusedVar","'Reeact' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]